version: '3.8'

networks:
  hospital_network:
    driver: bridge

services:
  main_host:
    build: ./main_host  # Build from the local directory
    container_name: main_host
    networks:
      - hospital_network
    ports:
      - "8000:8000"  # Expose port 8000 for Flask app

  hospital_1:
    image: nginx:latest
    container_name: hospital_1
    networks:
      - hospital_network
    depends_on:
      - main_host

  department_1:
    image: nginx:latest
    container_name: department_1
    networks:
      - hospital_network
    depends_on:
      - hospital_1

  department_2:
    image: nginx:latest
    container_name: department_2
    networks:
      - hospital_network
    depends_on:
      - hospital_1

  ward_1:
    image: nginx:latest
    container_name: ward_1
    networks:
      - hospital_network
    depends_on:
      - department_1

  ward_2:
    image: nginx:latest
    container_name: ward_2
    networks:
      - hospital_network
    depends_on:
      - department_1

  ward_3:
    image: nginx:latest
    container_name: ward_3
    networks:
      - hospital_network
    depends_on:
      - department_2

  ward_4:
    image: nginx:latest
    container_name: ward_4
    networks:
      - hospital_network
    depends_on:
      - department_2

  patient_1:
    image: nginx:latest
    container_name: patient_1
    networks:
      - hospital_network
    depends_on:
      - ward_1

  patient_2:
    image: nginx:latest
    container_name: patient_2
    networks:
      - hospital_network
    depends_on:
      - ward_1

  patient_3:
    image: nginx:latest
    container_name: patient_3
    networks:
      - hospital_network
    depends_on:
      - ward_1

  patient_4:
    image: nginx:latest
    container_name: patient_4
    networks:
      - hospital_network
    depends_on:
      - ward_2

  patient_5:
    image: nginx:latest
    container_name: patient_5
    networks:
      - hospital_network
    depends_on:
      - ward_2

  patient_6:
    image: nginx:latest
    container_name: patient_6
    networks:
      - hospital_network
    depends_on:
      - ward_2

  patient_7:
    image: nginx:latest
    container_name: patient_7
    networks:
      - hospital_network
    depends_on:
      - ward_3

  patient_8:
    image: nginx:latest
    container_name: patient_8
    networks:
      - hospital_network
    depends_on:
      - ward_3

  patient_9:
    image: nginx:latest
    container_name: patient_9
    networks:
      - hospital_network
    depends_on:
      - ward_3

  patient_10:
    image: nginx:latest
    container_name: patient_10
    networks:
      - hospital_network
    depends_on:
      - ward_4

  patient_11:
    image: nginx:latest
    container_name: patient_11
    networks:
      - hospital_network
    depends_on:
      - ward_4

  patient_12:
    image: nginx:latest
    container_name: patient_12
    networks:
      - hospital_network
    depends_on:
      - ward_4

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml 
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - hospital_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:  
      - "3001:3000"  # Changed to default Grafana port
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"  # Set admin password for Grafana
    volumes:
      - grafana-data:/var/lib/grafana  # Persist Grafana data
    networks:
      - hospital_network

  patient:
    build: ./patient  # Build the patient service from the local directory
    container_name: patient
    networks:
      - hospital_network
    depends_on:
      - main_host
    volumes:
      -  ./patient/patient_vitals.xlsx:/app/patient_vitals.xlsx
  alertmanager:
      image: prom/alertmanager
      container_name: alertmanager
      ports:
        - "9093:9093"
      networks:
        - hospital_network  
      volumes:
        - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      command:
        - '--config.file=/etc/alertmanager/alertmanager.yml'
  ml_service:
    build: ./ml_service
    container_name: ml_service
    ports:
      - "6000:6000"
    networks:
      - hospital_network
    volumes:
       - ./ml_service:/app

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

    